{
  "openapi": "3.0.0",
  "paths": {
    "/api/user": {
      "post": {
        "operationId": "createUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        },
        "summary": "Create a new user",
        "tags": [
          "User"
        ]
      }
    },
    "/api/user/{email}": {
      "put": {
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        },
        "summary": "Update a user",
        "tags": [
          "User"
        ]
      }
    }
  },
  "info": {
    "title": "React Query - OpenAPI",
    "description": "Experiments with React Query, OpenAPI and Mongoose",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CreateUserPayload": {
        "type": "object",
        "properties": {}
      },
      "ObjectId": {
        "type": "object",
        "properties": {}
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/ObjectId"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "age": {
            "type": "number"
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "_id",
          "email",
          "password",
          "name",
          "age",
          "dateOfBirth"
        ]
      },
      "UpdateUserPayload": {
        "type": "object",
        "properties": {}
      }
    }
  }
}